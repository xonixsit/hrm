import{K as g,f as u}from"./app-CC7RprvL.js";function m(){const t=g(),a=(e,r)=>{typeof window<"u"&&window.dispatchEvent(new CustomEvent("auth-error",{detail:{error:e,context:r,timestamp:new Date().toISOString()}}))},s=u(()=>{var e;try{const r=((e=t.props.auth)==null?void 0:e.user)||null;return r}catch(r){return a(r,"accessing user data"),null}}),n=u(()=>{try{const e=!!s.value;return e}catch(e){return a(e,"checking authentication state"),!1}}),i=u(()=>{var e;try{const r=((e=s.value)==null?void 0:e.roles)||[];return Array.isArray(r)?r:(console.warn("[AUTH WARNING] User roles is not an array:",r),[])}catch(r){return a(r,"accessing user roles"),[]}}),o=e=>{try{return!e||typeof e!="string"?(console.warn("[AUTH WARNING] Invalid role parameter:",e),!1):n.value?i.value.some(r=>typeof r=="string"?r===e:r.name===e):!1}catch(r){return a(r,`checking role '${e}'`),!1}},f=e=>{try{return Array.isArray(e)?n.value?e.some(r=>o(r)):!1:(console.warn("[AUTH WARNING] hasAnyRole expects an array, received:",e),!1)}catch(r){return a(r,`checking multiple roles ${e}`),!1}},p=e=>{try{return Array.isArray(e)?n.value?e.every(r=>o(r)):!1:(console.warn("[AUTH WARNING] hasAllRoles expects an array, received:",e),!1)}catch(r){return a(r,`checking all roles ${e}`),!1}},A=()=>{},l=()=>{try{return t.props?t.props.auth?t.props.auth.user?Array.isArray(t.props.auth.user.roles)?null:{type:"warning",message:"User roles data is invalid or missing",code:"INVALID_ROLES",context:{rolesType:typeof t.props.auth.user.roles,rolesValue:t.props.auth.user.roles}}:{type:"critical",message:"User data not available in auth object",code:"NO_USER_DATA",context:{authKeys:Object.keys(t.props.auth)}}:{type:"critical",message:"Auth data not shared from server",code:"NO_AUTH_DATA",context:{availableProps:Object.keys(t.props)}}:{type:"critical",message:"Page props not available",code:"NO_PAGE_PROPS"}}catch(e){return{type:"critical",message:"Error while checking authentication state",code:"AUTH_CHECK_ERROR",error:e.message}}},y=(e,r=null)=>{try{return!e||typeof e!="string"?(console.warn("[AUTH WARNING] Invalid property parameter:",e),r):s.value?s.value[e]??r:r}catch(c){return a(c,`accessing user property '${e}'`),r}},h=()=>!l();return{user:s,isAuthenticated:n,roles:i,hasRole:o,hasAnyRole:f,hasAllRoles:p,debugAuthState:A,getAuthError:l,getUserProperty:y,validateAuthState:h,withAuthCheck:(e,r=null)=>{try{return h()?e():r}catch(c){return a(c,"executing auth-dependent operation"),r}}}}export{m as u};
