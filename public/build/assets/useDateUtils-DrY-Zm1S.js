function d(){const o=t=>{if(!t)return"";const e=new Date(t);return isNaN(e.getTime())?"":e.toISOString().split("T")[0]};return{formatDateForInput:o,formatDateForDisplay:(t,e={})=>{if(!t)return"-";const n=new Date(t);if(isNaN(n.getTime()))return"-";const a={year:"numeric",month:"short",day:"numeric"};return n.toLocaleDateString("en-US",{...a,...e})},formatDateForAPI:t=>{if(!t)return null;const e=new Date(t);return isNaN(e.getTime())?null:e.toISOString()},isDateInPast:t=>{if(!t)return!1;const e=new Date(t),n=new Date;return n.setHours(0,0,0,0),e<n},isDateToday:t=>{if(!t)return!1;const e=new Date(t),n=new Date;return e.toDateString()===n.toDateString()},getRelativeDateString:t=>{if(!t)return"";const a=new Date(t)-new Date,r=Math.ceil(a/(1e3*60*60*24));return r===0?"Today":r===1?"Tomorrow":r===-1?"Yesterday":r>0?`In ${r} days`:r<0?`${Math.abs(r)} days ago`:""},daysBetween:(t,e)=>{if(!t||!e)return 0;const n=new Date(t),r=new Date(e)-n;return Math.ceil(r/864e5)},getDateValidationRules:(t=null,e=null)=>({min:t?o(t):null,max:e?o(e):null})}}export{d as u};
