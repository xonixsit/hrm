<template>
  <AuthenticatedLayout>
    <PageLayout
      title="Pending Timesheet Approvals"
      subtitle="Review and approve employee timesheet submissions"
      :breadcrumbs="breadcrumbs"
      :actions="headerActions"
    >
      <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
        <div class="p-6 text-gray-900">
          <!-- Header Actions -->
          <div class="flex justify-between items-start mb-6">
            <div>
              <h3 class="text-lg font-medium text-gray-900">Pending Timesheet Approvals</h3>
              <p class="mt-1 text-sm text-gray-600">
                Review and approve employee timesheet submissions.
              </p>
            </div>
            <div class="flex items-center space-x-4">
              <!-- Search Field -->
              <div class="relative">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
                <input
                  v-model="localFilters.search"
                  type="text"
                  placeholder="Search by employee, project, or description..."
                  class="block w-80 pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                  @input="debouncedApplyFilters"
                />
              </div>
              
              <!-- Show More Filters Button -->
              <button
                @click="showFilters = !showFilters"
                class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
              >
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z" />
                </svg>
                {{ showFilters ? 'Hide Filters' : 'Show Filters' }}
              </button>
            </div>
          </div>
          
          <!-- Filter Controls -->
          <div v-if="showFilters" class="mb-6 p-4 bg-gray-50 rounded-lg">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
              <!-- Employee Filter -->
              <div v-if="availableEmployees.length > 0">
                <label class="block text-sm font-medium text-gray-700 mb-1">Employee</label>
                <select
                  v-model="localFilters.employee"
                  class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                  @change="applyFilters"
                >
                  <option value="">All employees</option>
                  <option v-for="employee in availableEmployees" :key="employee.id" :value="employee.id">
                    {{ employee.name }}
                  </option>
                </select>
              </div>

              <!-- Project Filter -->
              <div v-if="availableProjects.length > 0">
                <label class="block text-sm font-medium text-gray-700 mb-1">Project</label>
                <select
                  v-model="localFilters.project"
                  class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                  @change="applyFilters"
                >
                  <option value="">All projects</option>
                  <option v-for="project in availableProjects" :key="project.id" :value="project.id">
                    {{ project.name }}
                  </option>
                </select>
              </div>
              
              <!-- Date From Filter -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Date From</label>
                <input
                  v-model="localFilters.date_from"
                  type="date"
                  class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                  @change="handleDateFromChange"
                />
              </div>
              
              <!-- Date To Filter -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Date To</label>
                <input
                  v-model="localFilters.date_to"
                  type="date"
                  class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                  @change="handleDateToChange"
                />
              </div>
            </div>
          
            <!-- Active Filters -->
            <div v-if="hasActiveFilters" class="mt-4 flex flex-wrap gap-2">
              <span class="text-sm font-medium text-gray-700">Active filters:</span>
              
              <!-- Search Filter -->
              <span 
                v-if="localFilters.search"
                class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"
              >
                Search: "{{ localFilters.search }}"
                <button 
                  @click="clearSearchFilter"
                  class="ml-1.5 inline-flex items-center justify-center w-4 h-4 rounded-full text-gray-400 hover:bg-gray-200 hover:text-gray-500 focus:outline-none"
                >
                  <span class="sr-only">Remove search filter</span>
                  <svg class="w-2 h-2" fill="currentColor" viewBox="0 0 8 8">
                    <path d="M4 3.293l2.146-2.147a.5.5 0 01.708.708L4.707 4l2.147 2.146a.5.5 0 01-.708.708L4 4.707l-2.146 2.147a.5.5 0 01-.708-.708L3.293 4 1.146 1.854a.5.5 0 01.708-.708L4 3.293z" />
                  </svg>
                </button>
              </span>

              <span
                v-if="activeEmployeeFilter"
                class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800"
              >
                Employee: {{ activeEmployeeFilter }}
                <button
                  @click="clearEmployeeFilter"
                  class="ml-1.5 inline-flex items-center justify-center w-4 h-4 rounded-full text-blue-400 hover:bg-blue-200 hover:text-blue-500 focus:outline-none"
                >
                  <span class="sr-only">Remove employee filter</span>
                  <svg class="w-2 h-2" fill="currentColor" viewBox="0 0 8 8">
                    <path d="M4 3.293l2.146-2.147a.5.5 0 01.708.708L4.707 4l2.147 2.146a.5.5 0 01-.708.708L4 4.707l-2.146 2.147a.5.5 0 01-.708-.708L3.293 4 1.146 1.854a.5.5 0 01.708-.708L4 3.293z" />
                  </svg>
                </button>
              </span>

              <span
                v-if="activeProjectFilter"
                class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800"
              >
                Project: {{ activeProjectFilter }}
                <button
                  @click="clearProjectFilter"
                  class="ml-1.5 inline-flex items-center justify-center w-4 h-4 rounded-full text-green-400 hover:bg-green-200 hover:text-green-500 focus:outline-none"
                >
                  <span class="sr-only">Remove project filter</span>
                  <svg class="w-2 h-2" fill="currentColor" viewBox="0 0 8 8">
                    <path d="M4 3.293l2.146-2.147a.5.5 0 01.708.708L4.707 4l2.147 2.146a.5.5 0 01-.708.708L4 4.707l-2.146 2.147a.5.5 0 01-.708-.708L3.293 4 1.146 1.854a.5.5 0 01.708-.708L4 3.293z" />
                  </svg>
                </button>
              </span>

              <span
                v-if="localFilters.date_from"
                class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800"
              >
                From: {{ formatDate(localFilters.date_from) }}
                <button
                  @click="clearDateFromFilter"
                  class="ml-1.5 inline-flex items-center justify-center w-4 h-4 rounded-full text-purple-400 hover:bg-purple-200 hover:text-purple-500 focus:outline-none"
                >
                  <span class="sr-only">Remove date from filter</span>
                  <svg class="w-2 h-2" fill="currentColor" viewBox="0 0 8 8">
                    <path d="M4 3.293l2.146-2.147a.5.5 0 01.708.708L4.707 4l2.147 2.146a.5.5 0 01-.708.708L4 4.707l-2.146 2.147a.5.5 0 01-.708-.708L3.293 4 1.146 1.854a.5.5 0 01.708-.708L4 3.293z" />
                  </svg>
                </button>
              </span>

              <span
                v-if="localFilters.date_to"
                class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800"
              >
                To: {{ formatDate(localFilters.date_to) }}
                <button
                  @click="clearDateToFilter"
                  class="ml-1.5 inline-flex items-center justify-center w-4 h-4 rounded-full text-purple-400 hover:bg-purple-200 hover:text-purple-500 focus:outline-none"
                >
                  <span class="sr-only">Remove date to filter</span>
                  <svg class="w-2 h-2" fill="currentColor" viewBox="0 0 8 8">
                    <path d="M4 3.293l2.146-2.147a.5.5 0 01.708.708L4.707 4l2.147 2.146a.5.5 0 01-.708.708L4 4.707l-2.146 2.147a.5.5 0 01-.708-.708L3.293 4 1.146 1.854a.5.5 0 01.708-.708L4 3.293z" />
                  </svg>
                </button>
              </span>

              <button
                @click="clearAllFilters"
                class="text-sm text-blue-600 hover:text-blue-800"
              >
                Clear all
              </button>
            </div>
          </div>

          <!-- Header with Stats -->
          <div class="flex justify-between items-center mb-6">
            <div class="flex items-center space-x-4 text-sm text-gray-600">
              <span class="flex items-center">
                <div class="w-2 h-2 bg-yellow-500 rounded-full mr-2"></div>
                {{ timesheets.total }} pending
              </span>
              <button
                v-if="selectedTimesheets.length > 0"
                @click="showBulkApprovalModal = true"
                class="px-3 py-1 bg-green-600 text-white text-sm rounded-md hover:bg-green-700"
              >
                Bulk Approve ({{ selectedTimesheets.length }})
              </button>
            </div>
          </div>

          <!-- Timesheets Table -->
          <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-300">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left">
                  <input
                    type="checkbox"
                    :checked="allSelected"
                    @change="toggleSelectAll"
                    class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
                  />
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Employee</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Project</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Hours</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Submitted</th>
                <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <tr v-for="timesheet in timesheets.data" :key="timesheet.id" class="hover:bg-gray-50">
                <td class="px-6 py-4">
                  <input
                    type="checkbox"
                    :value="timesheet.id"
                    v-model="selectedTimesheets"
                    class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
                  />
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="flex items-center">
                    <div class="flex-shrink-0 h-8 w-8">
                      <div class="h-8 w-8 rounded-full bg-indigo-100 flex items-center justify-center">
                        <span class="text-sm font-medium text-indigo-700">
                          {{ getInitials(timesheet.employee?.user?.name) }}
                        </span>
                      </div>
                    </div>
                    <div class="ml-3">
                      <div class="text-sm font-medium text-gray-900">
                        {{ timesheet.employee?.user?.name || 'Unknown' }}
                      </div>
                      <div class="text-sm text-gray-500">
                        {{ timesheet.employee?.employee_code || 'N/A' }}
                      </div>
                    </div>
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {{ formatDate(timesheet.date) }}
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-gray-900">{{ timesheet.project?.name || 'N/A' }}</div>
                  <div class="text-sm text-gray-500">{{ timesheet.task?.name || 'No task' }}</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                    {{ timesheet.hours }}h
                  </span>
                </td>
                <td class="px-6 py-4 text-sm text-gray-900 max-w-xs truncate">
                  {{ timesheet.description || 'No description' }}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {{ formatTimeAgo(timesheet.created_at) }}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <div class="flex items-center justify-end space-x-2">
                    <button
                      @click="approveTimesheet(timesheet)"
                      class="inline-flex items-center px-3 py-1 border border-transparent text-xs font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                    >
                      <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      Approve
                    </button>
                    <button
                      @click="rejectTimesheet(timesheet)"
                      class="inline-flex items-center px-3 py-1 border border-transparent text-xs font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                    >
                      <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                      </svg>
                      Reject
                    </button>
                  </div>
                </td>
              </tr>
            </tbody>
          </table>
        </div>

        <!-- Empty State -->
        <div v-if="!timesheets.data.length" class="py-12 text-center">
          <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">No pending approvals</h3>
          <p class="mt-1 text-sm text-gray-500">
            {{ hasActiveFilters ? 'Try adjusting your filters' : 'All timesheets have been reviewed.' }}
          </p>
        </div>
      </div>

      <!-- Pagination -->
      <div v-if="timesheets.last_page > 1" class="mt-6 flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6">
        <div class="flex flex-1 justify-between sm:hidden">
          <Link 
            v-if="timesheets.prev_page_url"
            :href="timesheets.prev_page_url" 
            class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
          >
            Previous
          </Link>
          <Link 
            v-if="timesheets.next_page_url"
            :href="timesheets.next_page_url" 
            class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
          >
            Next
          </Link>
        </div>
        <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
          <div>
            <p class="text-sm text-gray-700">
              Showing
              <span class="font-medium">{{ timesheets.from }}</span>
              to
              <span class="font-medium">{{ timesheets.to }}</span>
              of
              <span class="font-medium">{{ timesheets.total }}</span>
              results
            </p>
          </div>
          <div>
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
              <Link 
                v-if="timesheets.prev_page_url"
                :href="timesheets.prev_page_url"
                class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
              >
                <span class="sr-only">Previous</span>
                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                </svg>
              </Link>
              
              <template v-for="link in timesheets.links" :key="link.label">
                <Link 
                  v-if="link.url && !link.label.includes('Previous') && !link.label.includes('Next')"
                  :href="link.url"
                  :class="[
                    'relative inline-flex items-center px-4 py-2 text-sm font-semibold',
                    link.active 
                      ? 'z-10 bg-blue-600 text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600' 
                      : 'text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0'
                  ]"
                >
                  {{ link.label }}
                </Link>
              </template>
              
              <Link 
                v-if="timesheets.next_page_url"
                :href="timesheets.next_page_url"
                class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
              >
                <span class="sr-only">Next</span>
                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                </svg>
              </Link>
            </nav>
          </div>
        </div>
      </div>

      <!-- Bulk Approval Modal -->
      <div v-if="showBulkApprovalModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-lg p-6 w-full max-w-md">
          <h3 class="text-lg font-medium text-gray-900 mb-4">Bulk Approve Timesheets</h3>
          
          <div class="space-y-4">
            <p class="text-sm text-gray-600">
              You are about to approve {{ selectedTimesheets.length }} timesheet(s).
            </p>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Comments (Optional)</label>
              <textarea
                v-model="bulkApprovalComments"
                rows="3"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                placeholder="Add comments for all selected timesheets..."
              ></textarea>
            </div>
          </div>
          
          <div class="flex justify-end space-x-3 mt-6">
            <button
              @click="showBulkApprovalModal = false"
              class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50"
            >
              Cancel
            </button>
            <button
              @click="performBulkApproval"
              class="px-4 py-2 text-sm font-medium text-white bg-green-600 rounded-lg hover:bg-green-700"
            >
              Approve All
            </button>
          </div>
        </div>
      </div>

      <!-- Approval Modal -->
      <div v-if="showApprovalModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-lg p-6 w-full max-w-md">
          <h3 class="text-lg font-medium text-gray-900 mb-4">
            {{ approvalAction === 'approve' ? 'Approve' : 'Reject' }} Timesheet
          </h3>
          
          <div class="space-y-4">
            <div class="bg-gray-50 p-4 rounded-lg">
              <div class="text-sm">
                <div class="font-medium text-gray-900">{{ selectedTimesheet?.employee?.user?.name }}</div>
                <div class="text-gray-600">{{ formatDate(selectedTimesheet?.date) }} - {{ selectedTimesheet?.hours }}h</div>
                <div class="text-gray-600">{{ selectedTimesheet?.project?.name }}</div>
              </div>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">
                Comments {{ approvalAction === 'reject' ? '(Required)' : '(Optional)' }}
              </label>
              <textarea
                v-model="approvalComments"
                rows="3"
                :required="approvalAction === 'reject'"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                :placeholder="approvalAction === 'approve' ? 'Add approval comments...' : 'Please provide reason for rejection...'"
              ></textarea>
            </div>
          </div>
          
          <div class="flex justify-end space-x-3 mt-6">
            <button
              @click="showApprovalModal = false"
              class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50"
            >
              Cancel
            </button>
            <button
              @click="performApproval"
              :disabled="approvalAction === 'reject' && !approvalComments.trim()"
              :class="[
                'px-4 py-2 text-sm font-medium text-white rounded-lg',
                approvalAction === 'approve' 
                  ? 'bg-green-600 hover:bg-green-700' 
                  : 'bg-red-600 hover:bg-red-700',
                (approvalAction === 'reject' && !approvalComments.trim()) ? 'opacity-50 cursor-not-allowed' : ''
              ]"
            >
              {{ approvalAction === 'approve' ? 'Approve' : 'Reject' }}
            </button>
          </div>
        </div>
      </div>
    </PageLayout>
  </AuthenticatedLayout>
</template>

<script setup>
import { ref, computed } from 'vue'
import { router } from '@inertiajs/vue3'
import { debounce } from 'lodash'
import AuthenticatedLayout from '@/Layouts/AuthenticatedLayout.vue'
import PageLayout from '@/Components/Layout/PageLayout.vue'

const props = defineProps({
  timesheets: {
    type: Object,
    required: true
  },
  availableEmployees: {
    type: Array,
    default: () => []
  },
  availableProjects: {
    type: Array,
    default: () => []
  },
  filters: {
    type: Object,
    default: () => ({})
  }
})

// Local state
const loading = ref(false)
const selectedTimesheets = ref([])
const showBulkApprovalModal = ref(false)
const showApprovalModal = ref(false)
const selectedTimesheet = ref(null)
const approvalAction = ref('approve')
const approvalComments = ref('')
const showFilters = ref(false)
const bulkApprovalComments = ref('')

// Filter state
const localFilters = ref({
  search: props.filters.search || '',
  employee: props.filters.employee || '',
  project: props.filters.project || '',
  date_from: props.filters.date_from || '',
  date_to: props.filters.date_to || ''
})

// Computed properties
const allSelected = computed(() => {
  return props.timesheets.data.length > 0 && 
         selectedTimesheets.value.length === props.timesheets.data.length
})

// Active filters computed properties
const hasActiveFilters = computed(() => {
  return (localFilters.value.search && localFilters.value.search.trim()) ||
         localFilters.value.employee || 
         localFilters.value.project || 
         localFilters.value.date_from || 
         localFilters.value.date_to
})

const activeEmployeeFilter = computed(() => {
  if (!localFilters.value.employee) return null;
  
  const employee = props.availableEmployees.find(emp => 
    emp.id.toString() === localFilters.value.employee.toString()
  );
  
  return employee ? employee.name : null;
})

const activeProjectFilter = computed(() => {
  if (!localFilters.value.project) return null;
  
  const project = props.availableProjects.find(proj => 
    proj.id.toString() === localFilters.value.project.toString()
  );
  
  return project ? project.name : null;
})

// Breadcrumbs
const breadcrumbs = [
  { label: 'Dashboard', href: route('dashboard') },
  { label: 'Timesheets', href: route('timesheets.index') },
  { label: 'Pending Approvals', current: true }
]

// Header actions
const headerActions = [
  {
    id: 'view-all-timesheets',
    label: 'View All Timesheets',
    variant: 'secondary',
    handler: () => router.visit(route('timesheets.index'))
  }
]

// Methods
const getInitials = (name) => {
  if (!name) return 'N/A'
  return name
    .split(' ')
    .map(word => word.charAt(0))
    .join('')
    .toUpperCase()
    .slice(0, 2)
}

const formatDate = (dateString) => {
  if (!dateString) return 'N/A'
  const date = new Date(dateString)
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  })
}

const formatTimeAgo = (dateString) => {
  if (!dateString) return 'N/A'
  const date = new Date(dateString)
  const now = new Date()
  const diffTime = Math.abs(now - date)
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))
  
  if (diffDays === 1) return '1 day ago'
  if (diffDays < 7) return `${diffDays} days ago`
  if (diffDays < 30) return `${Math.ceil(diffDays / 7)} weeks ago`
  return `${Math.ceil(diffDays / 30)} months ago`
}

const toggleSelectAll = () => {
  if (allSelected.value) {
    selectedTimesheets.value = []
  } else {
    selectedTimesheets.value = props.timesheets.data.map(t => t.id)
  }
}

const approveTimesheet = (timesheet) => {
  selectedTimesheet.value = timesheet
  approvalAction.value = 'approve'
  approvalComments.value = ''
  showApprovalModal.value = true
}

const rejectTimesheet = (timesheet) => {
  selectedTimesheet.value = timesheet
  approvalAction.value = 'reject'
  approvalComments.value = ''
  showApprovalModal.value = true
}

const performApproval = () => {
  if (approvalAction.value === 'reject' && !approvalComments.value.trim()) {
    return
  }

  loading.value = true
  const endpoint = approvalAction.value === 'approve' 
    ? route('timesheets.approve', selectedTimesheet.value.id)
    : route('timesheets.reject', selectedTimesheet.value.id)

  router.post(endpoint, {
    comments: approvalComments.value.trim()
  }, {
    onSuccess: () => {
      showApprovalModal.value = false
      selectedTimesheet.value = null
      approvalComments.value = ''
    },
    onFinish: () => {
      loading.value = false
    }
  })
}

const performBulkApproval = () => {
  if (selectedTimesheets.value.length === 0) return

  loading.value = true
  router.post(route('timesheets.bulk-approve'), {
    timesheet_ids: selectedTimesheets.value,
    comments: bulkApprovalComments.value.trim()
  }, {
    onSuccess: () => {
      showBulkApprovalModal.value = false
      selectedTimesheets.value = []
      bulkApprovalComments.value = ''
    },
    onFinish: () => {
      loading.value = false
    }
  })
}

// Filter methods
const applyFilters = () => {
  loading.value = true
  
  const params = {}
  
  // Add non-empty filter values to params
  if (localFilters.value.search && localFilters.value.search.trim()) {
    params.search = localFilters.value.search.trim()
  }
  if (localFilters.value.employee) {
    params.employee = localFilters.value.employee
  }
  if (localFilters.value.project) {
    params.project = localFilters.value.project
  }
  if (localFilters.value.date_from) {
    params.date_from = localFilters.value.date_from
  }
  if (localFilters.value.date_to) {
    params.date_to = localFilters.value.date_to
  }
  
  router.get(route('timesheets.pending-approvals'), params, {
    preserveState: true,
    preserveScroll: true,
    onFinish: () => {
      loading.value = false
    }
  })
}

const debouncedApplyFilters = debounce(applyFilters, 300)

const clearSearchFilter = () => {
  localFilters.value.search = ''
  applyFilters()
}

const clearEmployeeFilter = () => {
  localFilters.value.employee = ''
  applyFilters()
}

const clearProjectFilter = () => {
  localFilters.value.project = ''
  applyFilters()
}

const clearDateFromFilter = () => {
  localFilters.value.date_from = ''
  applyFilters()
}

const clearDateToFilter = () => {
  localFilters.value.date_to = ''
  applyFilters()
}

const clearAllFilters = () => {
  localFilters.value = {
    search: '',
    employee: '',
    project: '',
    date_from: '',
    date_to: ''
  }
  applyFilters()
}

// Date validation
const validateDateRange = () => {
  if (localFilters.value.date_from && localFilters.value.date_to) {
    if (localFilters.value.date_from > localFilters.value.date_to) {
      // Auto-correct: swap the dates
      const temp = localFilters.value.date_from
      localFilters.value.date_from = localFilters.value.date_to
      localFilters.value.date_to = temp
    }
  }
}

const handleDateFromChange = () => {
  validateDateRange()
  applyFilters()
}

const handleDateToChange = () => {
  validateDateRange()
  applyFilters()
}
</script>